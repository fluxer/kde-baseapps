/* js_autocomplete.json file was generated with this script: */
function kateGetCategory(child, childKey) {
    if (!child) {
        return "constant";
    }
    try {
        var repr = child.toString();
    } catch(e) {
        return "constant";
    }
    if (repr == "[object "+ childKey +"]" ) {
        return "class";
    } else if (repr.indexOf("[object ") != -1) {
        return "module";
    }
    if (typeof(child) == "function") {
        return "function";
    }
    return "constant";
}

function kateGetArgs(child) {
    var args = "";
    try {
        var firstLine = child.toString().split("\n")[0];
        var arg1 = firstLine.indexOf("(") + 1;
        var arg2 = firstLine.indexOf(")");
        args = firstLine.substring(arg1, arg2);
        if (args) {
            args = "(" + args + ")";
        }
    } catch(e) {
    }
    return args;
}

function kateGetJSAutocomplete(obj, levelmax, level, dict) {
    if (!dict) {
        dict = {}
    }
    if (level == undefined) {
        level = 0;
    } else {
        level++;
    }
    for (var childKey in obj){
        children = {};
        var child = null;
        var childKeyInt = parseInt(childKey);

        if (childKey != "window" && childKey.indexOf("kateGet") == -1 && !childKeyInt && childKeyInt!=0) {
            try {
                child = obj[childKey];
                if (level < levelmax) {
                    children = kateGetJSAutocomplete(child, levelmax, level, children);
                }
            } catch(e) {
            }
            dict[childKey] = {"children": children};
            if (child != undefined) {
                var category = kateGetCategory(child, childKey);
                dict[childKey]["category"] = category;
                if (category == "function") {
                    var args = kateGetArgs(child);
                    if (args) {
                        dict[childKey]["args"] = kateGetArgs(child);
                    }
                }
            } else {
                dict[childKey]["category"] = "constant";
            }
        }
    }
    return dict
}

result = JSON.stringify(kateGetJSAutocomplete(window, 2))

/* After in a python shell (pretty json): */
import simplejson
file_path = "./js_autocomplete.json"
json_text = open(file_path).read()
file = open(file_path, "w")
target = simplejson.dumps(simplejson.loads(json_text), indent=2)
file.write(target)
file.close()
